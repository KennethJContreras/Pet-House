---
interface NavLink {
  link: string;
  href: string;
}

const navLinks: NavLink[] = [
  {
    link: "Inicio",
    href: "/",
  },
  {
    link: "Qui√©nes somos",
    href: "/quienes-somos",
  },
  {
    link: "Historias de adopcion",
    href: "/historias-de-adopcion",
  },
  {
    link: "Preguntale a Pet House",
    href: "/preguntale-a-Pet-House",
  },
  {
    link: "Novedades",
    href: "/novedades/",
  },
];
---

<header class="bg-white dark:bg-gray-900">
  <div class="mx-auto max-w-screen-xl px-4 sm:px-6 lg:px-8">
    <div class="flex h-16 items-center justify-between">
      <div class="md:flex md:items-center md:gap-12">
        <a class="block text-teal-600 dark:text-teal-600" href="#">
          <span class="sr-only">Home</span>
          <a href="/index.html"><img src="/images/logo.png" alt="" class="h-10" /></a>
        </a>
      </div>

      <div class="hidden md:block">
        <nav aria-label="Global">
          <ul class="flex items-center gap-6 text-sm">
            {
              navLinks.map((item) => (
                <li>
                  <a
                    class="text-gray-500 transition hover:text-gray-500/75 dark:text-white dark:hover:text-white/75"
                    href={item.href}
                  >
                    {item.link}
                  </a>
                </li>
              ))
            }
          </ul>
        </nav>
      </div>

      <div class="flex items-center gap-4"></div>
      <!--  -->
      <div
        x-data="{ isOpen: true }"
        class="block md:hidden relative inline-block"
      >
        <!-- Dropdown toggle button -->
        <div id="menu-button" class="block md:hidden">
          <button
            class="rounded bg-gray-100 p-2 text-gray-600 transition hover:text-gray-600/75 dark:bg-gray-800 dark:text-white dark:hover:text-white/75"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-5 w-5"
              fill="none"
              viewBox="0 0 24 24"
              stroke="currentColor"
              stroke-width="2"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          </button>
        </div>

        <!-- Dropdown menu -->
        <div
          id="menu-dropdown"
          x-show="isOpen"
          @click.away="isOpen = false"
          x-transition:enter="transition ease-out duration-100"
          x-transition:enter-start="opacity-0 scale-90"
          x-transition:enter-end="opacity-100 scale-100"
          x-transition:leave="transition ease-in duration-100"
          x-transition:leave-start="opacity-100 scale-100"
          x-transition:leave-end="opacity-0 scale-90"
          class="absolute right-0 z-20 w-48 py-2 mt-2 origin-top-right bg-white rounded-md shadow-xl dark:bg-gray-800"
        >
        {navLinks.map((link) => (
            <a
            href={link.href}
            class="block px-4 py-3 text-sm text-gray-600 capitalize transition-colors duration-300 transform dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 dark:hover:text-white">
            {link.link}
          </a>
        ))}
        </div>
      </div>
      <!--  -->
    </div>
  </div>
</header>

<script>
  const menuButton = document.getElementById("menu-button");
  const menuDropdown = document.getElementById("menu-dropdown");

  menuButton?.addEventListener("click", () => {
    menuDropdown?.classList.toggle("hidden");
  });
</script>
